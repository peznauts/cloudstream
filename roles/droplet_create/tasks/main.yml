# CloudStream Copyright (C) 2020  Kevin Carter

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

---

- name: Set python interpreter fact
  set_fact:
    ansible_python_interpreter: "{{ local_python_interpreter }}"
  when:
    - local_python_interpreter is defined
  run_once: true

- name: "Create ssh key"
  community.digitalocean.digital_ocean_sshkey:
    name: "{{ droplet_keypair }}"
    ssh_pub_key: "{{ lookup('file', ansible_env.HOME ~ '/.ssh/id_rsa.pub') }}"
    state: present
  register: ssh_key
  run_once: true

- name: Create a new droplet
  community.digitalocean.digital_ocean_droplet:
    state: present
    name: "rtmpServer-{{ ansible_host }}"
    unique_name: true
    size:  "{{ (transcode | bool) | ternary(droplet_instance_type_transcode, droplet_instance_type) }}"
    region: "{{ droplet_region }}"
    image: "{{ droplet_image }}"
    wait_timeout: 600
    private_networking: true
    tags:
    - "rtmpServer"
    ssh_keys:
    - "{{ ssh_key.data.ssh_key.id }}"
  register: my_droplet

- name: Set droplet fact
  set_fact:
    droplet_facts: "{{ my_droplet }}"

- name: Add instance to dynamic group
  add_host:
    hostname: "rtmpServer-{{ item }}"
    ansible_host: "{{ hostvars[item]['droplet_facts']['data']['ip_address'] }}"
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
    ansible_user: root
    ansible_python_interpreter: /usr/bin/python3
    rtmpserver_transcode: "{{ hostvars[item]['transcode'] | bool }}"
    rtmpserver_public_ip: "{{ hostvars[item]['droplet_facts']['data']['ip_address'] }}"
    rtmpserver_private_ip: "{{ hostvars[item]['droplet_facts']['data']['private_ipv4_address'] }}"
    groups:
    - streamerTarget
  loop: "{{ ansible_play_hosts }}"

- name: Wait for ssh to come up
  wait_for:
    host: "{{ my_droplet.data.ip_address }}"
    port: 22
    delay: 10
    timeout: 300
